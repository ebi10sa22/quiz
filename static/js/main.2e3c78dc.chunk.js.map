{"version":3,"sources":["Context/StateProvider.js","Components/QuizPage.js","Components/Category.js","Components/FinalPage.js","App.js","reportWebVitals.js","Context/reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initial","children","Provider","value","useReducer","useStateProvider","useContext","QuizPage","response","score","dispatch","useState","ans","setAns","React","open","vertical","horizontal","state","setState","index","setIndex","error","setError","length","options","answers","className","Paper","variant","question","undefined","FormControl","component","RadioGroup","aria-label","name","onChange","e","target","Object","values","map","obj","FormControlLabel","control","Radio","label","Button","style","marginLeft","marginRight","color","onClick","keys","find","key","correct_answer","type","final_show","handleClick","Snackbar","anchorOrigin","onClose","message","Category","chips_value","category","setCategory","difficulty","setDifficulty","questions","setQuestions","setName","email","setEmail","show","setShow","backdrop","setBackDrop","datas","useTheme","useEffect","justifyContent","transform","InputLabel","Select","defaultValue","disabled","event","MenuItem","FormHelperText","number","id","marginTop","alert","onSubmit","preventDefault","display","TextField","helperText","flex","marginBottom","Backdrop","CircularProgress","FinalPage","App","data","final","axios","get","then","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e3c78dc.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer,initial,children}) => (\n<StateContext.Provider value={useReducer(reducer,initial)}>\n  {children}\n</StateContext.Provider>\n)\n\nexport const useStateProvider = () => useContext(StateContext);","/* eslint-disable no-unused-vars */\nimport { Button, Container, FormControl, FormControlLabel, FormLabel, Paper, Radio, RadioGroup, Snackbar } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useStateProvider } from '../Context/StateProvider';\nimport \"./QuizPage.css\";\nimport Alert from '@material-ui/lab/Alert';\n\nfunction QuizPage() {\n  const [{ response, score }, dispatch] = useStateProvider();\n  const [ans, setAns] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'left',\n  });\n\n  const { vertical, horizontal, open } = state;\n\n\n  const handleClose__ = () => {\n    setState({ ...state, open: false });\n  };\n\n  const [index, setIndex] = useState(0);\n  const [error, setError] = useState(false);\n  const length = response.length - 1;\n  const handleClick = () => {\n    setState({open : true})\n    let answer = Object.keys(response[index]?.answers).find(key => response[index]?.answers[key] === ans)\n    if (answer === response[index].correct_answer) {\n      dispatch({\n        type : \"SET_SCORE\"\n      })\n      setIndex(index + 1);\n      setError(false)\n    }\n    else {\n      dispatch({\n        type : \"REDUCE_SCORE\"\n      })\n      setIndex(index + 1);\n      setError(true);\n    }\n    if(index === length) {\n      dispatch({\n        type : \"SET_RESPONSE_UNDEFINED\",\n        final_show : true\n      })\n    }\n  }\n  let options = response[index]?.answers;\n  return (\n    <div className=\"quiz\">\n      <Paper variant={\"outlined\"} className=\"quiz__container\">\n        <div className=\"quiz__inner1\" >\n          <div className=\"quiz__status\"><span>Score : {score}</span>\n          <p>Q.No : {index + 1}/{length + 1}</p></div>\n          <div className=\"quiz__question\">\n            <p>{response[index]?.question}</p>\n          </div>\n          <div className=\"quiz__options\">\n            <div className=\"quiz__option\">\n              <strong><h3>Answers :</h3></strong>\n              {options !== undefined && <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"Answers\" name=\"answers\" value={ans} onChange={(e) => setAns(e.target.value)}>\n                  {Object.values(options).map((obj) => (obj === null) ? \"\" : <FormControlLabel key={obj} value={obj} control={<Radio />} label={obj} />)}\n                </RadioGroup>\n              </FormControl>}\n            </div>\n          </div>\n        </div>\n        <div className=\"quiz__inner2\">\n          {/* <Button disabled={index === length} variant=\"contained\" color=\"default\" onClick={() => (index < length) ? setIndex(index + 1) : alert(\"Last question\")}>Next</Button> */}\n          <Button style={{ marginLeft: 20, marginRight: 20 }} variant=\"contained\" color=\"secondary\" onClick={() => handleClick()}>Submit</Button>\n          {/* <Button disabled={index === 0} variant=\"contained\" color=\"default\" onClick={() => (index > 0) ? setIndex(index - 1) : alert(\"You have reached the first question\")}>Previous</Button> */}\n        </div>\n      </Paper>\n      <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left'  }} open={state.open} onClose={handleClose__} key={state.vertical + state.horizontal} message={error ? \"Incorrect Answer\" : \"Correct Answer\"}/> \n    </div>\n  )\n}\n\nexport default QuizPage","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { Backdrop, Button, Chip, CircularProgress, FormControl, FormHelperText, Input, InputLabel, MenuItem, Select, TextField, useTheme } from '@material-ui/core';\nimport { useStateProvider } from '../Context/StateProvider';\nimport \"./Category.css\";\n\nfunction Category() {\n\n  const [{ response }, dispatch] = useStateProvider();\n  const [chips_value, setChipValue] = useState([]);\n  const [category, setCategory] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [questions, setQuestions] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [show, setShow] = useState(false);\n  const [backdrop, setBackDrop] = useState(false);\n  const names = ['Bash', 'DevOps', 'Docker', 'HTML', 'Javascipt', 'Kubernetes','Larvel', 'Linux', 'MySQL', 'PHP', 'WordPress'];\n  const numbers = [5, 10, 15, 20];\n  const datas = { category, difficulty, questions, chips_value, name, email }\n  const themes = useTheme();\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: 48 * 4.5 + 8,\n        width: 250,\n      },\n    },\n  };\n  useEffect(() => (response !== undefined ) && setBackDrop(false), [response]);\n  const getStyles = (name, chips_value, theme) => {\n    return {\n      fontWeight: chips_value.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n    };\n  };\n\n  const handleChip = (event) => {\n    setChipValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (datas.name !== \"\" && datas.email !== \"\") {\n      setBackDrop(true);\n      dispatch({\n        type: \"SET_STATE\",\n        datas: datas\n      });\n\n  }\n    else {\n      alert(\"Enter the details to continue\");\n    }\n  };\n  const handleClick = () => {\n    if (datas.category !== \"\" && datas.difficulty !== \"\" && datas.questions !== \"\") {\n      setShow(true);\n    }\n    else {\n      alert(\"Select the options to proceed forward !!!\");\n    }\n  };\n\n  return (\n    <div className=\"category\" style={{ justifyContent: show && \"center\", transform: response === undefined ? \"translateY(0px)\" : \"translateY(-999px)\" }}>\n      {show ? \"\" : <p>Questions will be random according to the category you choose !</p>}\n      <div className=\"category__options\">\n        <FormControl className=\"category__form\">\n          <InputLabel>Category</InputLabel>\n          <Select\n            defaultValue=\"\"\n            disabled={show}\n            onChange={(event) => setCategory(event.target.value)}\n          >\n            <MenuItem value={\"any\"}>Any Category</MenuItem>\n            <MenuItem value={\"linux\"}>Linux</MenuItem>\n            <MenuItem value={\"bash\"}>BASH</MenuItem>\n            <MenuItem value={\"uncategorized\"}>Uncategorized</MenuItem>\n            <MenuItem value={\"docker\"}>Docker</MenuItem>\n            <MenuItem value={\"sql\"}>SQL</MenuItem>\n            <MenuItem value={\"cms\"}>CMS</MenuItem>\n            <MenuItem value={\"code\"}>Code</MenuItem>\n            <MenuItem value={\"devops\"}>DevOps</MenuItem>\n          </Select>\n          <FormHelperText>{category === \"\" ? \"Select Something to proceed\" : `You have selected ${category}`}</FormHelperText>\n        </FormControl>\n        <FormControl className=\"category__form\">\n          <InputLabel>Difficulty</InputLabel>\n          <Select\n          defaultValue=\"\"\n            onChange={(event) => setDifficulty(event.target.value)}\n            disabled={show}\n          >\n            <MenuItem value={\"random\"}>Any</MenuItem>\n            <MenuItem value={\"easy\"}>Easy</MenuItem>\n            <MenuItem value={\"medium\"}>Medium</MenuItem>\n            <MenuItem value={\"hard\"}>Hard</MenuItem>\n          </Select>\n          <FormHelperText>{difficulty === \"\" ? \"Select Something to proceed\" : `You have selected ${difficulty}`}</FormHelperText>\n        </FormControl>\n        <FormControl className=\"category__form\">\n          <InputLabel>Number of questions</InputLabel>\n          <Select\n          defaultValue=\"\"\n            disabled={show}\n            onChange={(event) => setQuestions(event.target.value)}\n          >\n            {numbers.map((number,id) => (<MenuItem key={id} value={number}>{number}</MenuItem>))}\n          </Select>\n          <FormHelperText>{questions === \"\" ? \"Select Something to proceed\" : `You have selected ${questions}`}</FormHelperText>\n        </FormControl>\n        {!show && <Button variant=\"contained\" color=\"secondary\" style={{ marginTop: 20 }} onClick={handleClick}>Next</Button>}\n      </div>\n      <form className=\"category__user\" onSubmit={handleSubmit} style={{ transform: show ? \"translateX(0px)\" : \"translateX(1000px)\", display: show ? \"flex\" : \"none\" }}>\n        <div className=\"category__form\">\n          <TextField\n            helperText={\"Please enter your name\"}\n            variant=\"outlined\"\n            label={\"Name\"}\n            style={{ flex: 1, marginBottom: 20 }}\n            onChange={(event) => setName(event.target.value)} />\n          <TextField\n            variant=\"outlined\"\n            label={\"E-mail\"}\n            helperText={\"Reults will be sent to your email\"}\n            type=\"email\"\n            style={{ flex: 1, marginBottom: 20 }}\n            onChange={(event) => setEmail(event.target.value)} />\n          <Button variant=\"contained\" color=\"secondary\" type=\"submit\">Start</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => setShow(false)}>Back</Button>\n        </div>\n      </form>\n      <Backdrop open={backdrop && response === undefined}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default  Category;","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useStateProvider } from '../Context/StateProvider';\nimport \"./FinalPage.css\";\nfunction FinalPage() {\n  const [{score},dispatch] = useStateProvider();\n  const handleClick = () => {\n    dispatch({\n      type : \"SET_DEFAULT\"\n    })\n  }\n  return (\n    <div className=\"final\">\n      <div className=\"final__container\">\n        <p>Score = {score}</p>\n        <Button variant=\"contained\" onClick={handleClick}color=\"secondary\">Play Again</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FinalPage\n","import React, { useEffect } from 'react'\nimport \"./App.css\";\nimport { useStateProvider } from './Context/StateProvider';\nimport axios from \"axios\";\nimport QuizPage from './Components/QuizPage';\nimport Category from './Components/Category';\nimport FinalPage from './Components/FinalPage';\nfunction App() {\n  const API_KEY = \"8QOzZnKgftwBO9RKZSzhsClUwOjwQ8lZLTXR5EfK\"\n  const [{data,response,final},dispatch] = useStateProvider();\n  useEffect(() => {\n    data !== undefined && axios.get(`https://quizapi.io/api/v1/questions?apiKey=${API_KEY}&limit=${data?.questions}&difficult=${data?.difficulty}`)\n    .then(response => dispatch({\n      type : \"SET_RESPONSE\",\n      response : response.data\n    }))\n    .catch(err => console.log(err))\n  },[data, dispatch]);\n  return (\n    <div className=\"app\">\n      <Category />\n      {response !== undefined && <QuizPage />}\n      {final && <FinalPage/>}\n    </div>  \n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initial = {\n  data: undefined,\n  final : false,\n  score: 0,\n  response : undefined,\n}\n\nconst reducer = (state,action) => {\n  switch(action.type){\n    case \"SET_DEFAULT\":\n      return {data : undefined,response : undefined,final : false,score : 0}\n    case \"SET_RESPONSE\":\n      return {...state , response : action.response}\n    case \"SET_RESPONSE_UNDEFINED\":\n      return {...state , response : undefined,final : action.final_show}\n    case \"SET_STATE\":\n      return {\n        ...state,data : action.datas\n      }\n    case \"SET_SCORE\":\n      return {...state,score : state.score + 1}\n    case \"REDUCE_SCORE\":\n      return {...state,score : state.score - 1}\n    default :\n    return state;\n  }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './Context/StateProvider';\nimport reducer, { initial } from './Context/reducer';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <StateProvider initial={initial} reducer={reducer}>\n      <App />\n    </StateProvider>\n  // </React.StrictMode>,\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}